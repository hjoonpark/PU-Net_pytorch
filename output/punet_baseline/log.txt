========================================
Namespace(gpu=0, model='punet', log_dir='output/punet_baseline', npoint=1024, up_ratio=4, max_epoch=100, batch_size=1, use_bn=False, use_res=False, alpha=1.0, optim='adam', use_decay=False, lr=0.001, lr_decay=0.71, lr_clip=1e-06, decay_step_list=[30, 60], weight_decay=0.0005, workers=4)
========================================
Restshapes
    lrestshape: (500, 3), min/max=(-0.78, 0.76), mean=0.09, std=0.46)
    hrestshape: (4096, 3), min/max=(-0.80, 0.45), mean=-0.03, std=0.28)
Dataset info
    lx_pos       torch.Size([435, 500, 3]): min/max=(-0.78, 0.76), mean=0.09, std=0.46)
    hx_pos       torch.Size([435, 4096, 3]): min/max=(-0.85, 0.46), mean=-0.02, std=0.28)
dataset_tr:
models.punet
PUNet(
  (SA_modules): ModuleList(
    (0): PointnetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): SharedMLP(
          (layer0): Conv2d(
            (conv): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
          (layer1): Conv2d(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
          (layer2): Conv2d(
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
        )
      )
    )
    (1): PointnetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): SharedMLP(
          (layer0): Conv2d(
            (conv): Conv2d(67, 64, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
          (layer1): Conv2d(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
          (layer2): Conv2d(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
        )
      )
    )
    (2): PointnetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): SharedMLP(
          (layer0): Conv2d(
            (conv): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
          (layer1): Conv2d(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
          (layer2): Conv2d(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
        )
      )
    )
    (3): PointnetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): SharedMLP(
          (layer0): Conv2d(
            (conv): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
          (layer1): Conv2d(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
          (layer2): Conv2d(
            (conv): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1))
            (activation): ReLU(inplace=True)
          )
        )
      )
    )
  )
  (FP_Modules): ModuleList(
    (0): PointnetFPModule(
      (mlp): SharedMLP(
        (layer0): Conv2d(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
          (activation): ReLU(inplace=True)
        )
      )
    )
    (1): PointnetFPModule(
      (mlp): SharedMLP(
        (layer0): Conv2d(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
          (activation): ReLU(inplace=True)
        )
      )
    )
    (2): PointnetFPModule(
      (mlp): SharedMLP(
        (layer0): Conv2d(
          (conv): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
          (activation): ReLU(inplace=True)
        )
      )
    )
  )
  (FC_Modules): ModuleList(
    (0): SharedMLP(
      (layer0): Conv2d(
        (conv): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1))
        (activation): ReLU(inplace=True)
      )
      (layer1): Conv2d(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
        (activation): ReLU(inplace=True)
      )
    )
    (1): SharedMLP(
      (layer0): Conv2d(
        (conv): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1))
        (activation): ReLU(inplace=True)
      )
      (layer1): Conv2d(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
        (activation): ReLU(inplace=True)
      )
    )
    (2): SharedMLP(
      (layer0): Conv2d(
        (conv): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1))
        (activation): ReLU(inplace=True)
      )
      (layer1): Conv2d(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
        (activation): ReLU(inplace=True)
      )
    )
    (3): SharedMLP(
      (layer0): Conv2d(
        (conv): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1))
        (activation): ReLU(inplace=True)
      )
      (layer1): Conv2d(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
        (activation): ReLU(inplace=True)
      )
    )
  )
  (pcd_layer): Sequential(
    (0): SharedMLP(
      (layer0): Conv2d(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
        (activation): ReLU(inplace=True)
      )
    )
    (1): SharedMLP(
      (layer0): Conv2d(
        (conv): Conv2d(64, 3, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
)
n_trainable_params=814,307
